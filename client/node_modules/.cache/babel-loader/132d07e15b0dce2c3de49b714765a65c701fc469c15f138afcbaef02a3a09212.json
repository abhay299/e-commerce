{"ast":null,"code":"import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport cartReducer from './cartRedux';\nimport userReducer from \"./userRedux\";\nconst persistConfig = {\n  key: 'user',\n  version: 1,\n  storage\n};\n\n// const rootReducer\n\nconst persistedReducer = persistReducer(persistConfig, userReducer);\nexport const store = () => configureStore({\n  reducer: {\n    cart: cartReducer,\n    user: persistedReducer\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nexport let persistor = persistStore(store);","map":{"version":3,"names":["configureStore","combineReducers","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","cartReducer","userReducer","persistConfig","key","version","persistedReducer","store","reducer","cart","user","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"sources":["D:/reactWebApp/e-commerce/client/src/redux/store.js"],"sourcesContent":["import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\r\nimport {\r\n\tpersistStore,\r\n\tpersistReducer,\r\n\tFLUSH,\r\n\tREHYDRATE,\r\n\tPAUSE,\r\n\tPERSIST,\r\n\tPURGE,\r\n\tREGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage'\r\nimport cartReducer from './cartRedux';\r\nimport userReducer from \"./userRedux\";\r\n\r\nconst persistConfig = {\r\n\tkey: 'user',\r\n\tversion: 1,\r\n\tstorage,\r\n}\r\n\r\n// const rootReducer\r\n\r\nconst persistedReducer = persistReducer(persistConfig, userReducer);\r\n\r\nexport const store = () => configureStore({\r\n\treducer: {\r\n\t\tcart: cartReducer,\r\n\t\tuser: persistedReducer,\r\n\t},\r\n\tmiddleware: (getDefaultMiddleware) =>\r\n\t\tgetDefaultMiddleware({\r\n\t\t\tserializableCheck: {\r\n\t\t\t\tignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n\t\t\t},\r\n\t\t}),\r\n});\r\n\r\nexport let persistor = persistStore(store);"],"mappings":"AAAA,SAASA,cAAc,EAAEC,eAAe,QAAQ,kBAAkB;AAClE,SACCC,YAAY,EACZC,cAAc,EACdC,KAAK,EACLC,SAAS,EACTC,KAAK,EACLC,OAAO,EACPC,KAAK,EACLC,QAAQ,QACF,eAAe;AACtB,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,OAAOC,WAAW,MAAM,aAAa;AACrC,OAAOC,WAAW,MAAM,aAAa;AAErC,MAAMC,aAAa,GAAG;EACrBC,GAAG,EAAE,MAAM;EACXC,OAAO,EAAE,CAAC;EACVL;AACD,CAAC;;AAED;;AAEA,MAAMM,gBAAgB,GAAGb,cAAc,CAACU,aAAa,EAAED,WAAW,CAAC;AAEnE,OAAO,MAAMK,KAAK,GAAGA,CAAA,KAAMjB,cAAc,CAAC;EACzCkB,OAAO,EAAE;IACRC,IAAI,EAAER,WAAW;IACjBS,IAAI,EAAEJ;EACP,CAAC;EACDK,UAAU,EAAGC,oBAAoB,IAChCA,oBAAoB,CAAC;IACpBC,iBAAiB,EAAE;MAClBC,cAAc,EAAE,CAACpB,KAAK,EAAEC,SAAS,EAAEC,KAAK,EAAEC,OAAO,EAAEC,KAAK,EAAEC,QAAQ;IACnE;EACD,CAAC;AACH,CAAC,CAAC;AAEF,OAAO,IAAIgB,SAAS,GAAGvB,YAAY,CAACe,KAAK,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}